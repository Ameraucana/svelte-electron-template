{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Stopwatch.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onDestroy } from 'svelte';\n\n  let seconds = 0;\n  let interval;\n  let active = false;\n\n  const control = () => {\n    if (!active) {\n      active = true;\n      interval = setInterval(() => {\n        seconds += 1;\n      }, 1000);\n    } else {\n      active = false;\n      clearInterval(interval);\n    }\n  }\n\n  $: displaySeconds = (seconds % 60).toString().padStart(2, \"0\");\n  $: minutes = (Math.floor(seconds / 60) % 60).toString().padStart(2, \"0\");\n  $: hours = Math.floor(seconds / 3600).toString();\n\n  onDestroy(() => clearInterval(interval));\n</script>\n\n<style>\n  .container {\n    display: flex;\n\n  }\n  span {\n    font-size: 24pt;\n    font-weight: bold;\n  }\n  p {\n    font-size: 18pt;\n    margin: 0px;\n  }\n  p:last-of-type {\n    display: inline;\n  }\n  button {\n    float: right;\n  }\n</style>\n\n<div class=container>\n  <div>\n    <p>\n      <span>{hours} {hours === \"1\" ? \"hour\" : \"hours\"}</span> elapsed\n    </p>\n    <p>\n      {minutes}\n      :\n      {displaySeconds}\n    </p>\n    <button on:click={control}>\n      click\n    </button>\n  </div>\n</div>\n",
    "<script>\n  import { onDestroy } from 'svelte';\n\n  let seconds = 0;\n  let interval;\n  let active = false;\n\n  const control = () => {\n    if (!active) {\n      active = true;\n      interval = setInterval(() => {\n        seconds += 1;\n      }, 1000);\n    } else {\n      active = false;\n      clearInterval(interval);\n    }\n  }\n\n  $: displaySeconds = (seconds % 60).toString().padStart(2, \"0\");\n  $: minutes = (Math.floor(seconds / 60) % 60).toString().padStart(2, \"0\");\n  $: hours = Math.floor(seconds / 3600).toString();\n\n  onDestroy(() => clearInterval(interval));\n</script>\n\n<style>\n  .container {\n    display: flex;\n\n  }\n  span {\n    font-size: 24pt;\n    font-weight: bold;\n  }\n  p {\n    font-size: 18pt;\n    margin: 0px;\n  }\n  p:last-of-type {\n    display: inline;\n  }\n  button {\n    float: right;\n  }\n</style>\n\n<div class=container>\n  <div>\n    <p>\n      <span>{hours} {hours === \"1\" ? \"hour\" : \"hours\"}</span> elapsed\n    </p>\n    <p>\n      {minutes}\n      :\n      {displaySeconds}\n    </p>\n    <button on:click={control}>\n      click\n    </button>\n  </div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AA2BE,UAAU,eAAC,CAAC,AACV,OAAO,CAAE,IAAI,AAEf,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,CAAC,eAAC,CAAC,AACD,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GAAG,AACb,CAAC,AACD,gBAAC,aAAa,AAAC,CAAC,AACd,OAAO,CAAE,MAAM,AACjB,CAAC,AACD,MAAM,eAAC,CAAC,AACN,KAAK,CAAE,KAAK,AACd,CAAC;ACjBD,UAAU,eAAC,CAAC,AACV,OAAO,CAAE,IAAI,AAEf,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,CAAC,eAAC,CAAC,AACD,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GAAG,AACb,CAAC,AACD,gBAAC,aAAa,AAAC,CAAC,AACd,OAAO,CAAE,MAAM,AACjB,CAAC,AACD,MAAM,eAAC,CAAC,AACN,KAAK,CAAE,KAAK,AACd,CAAC"
}